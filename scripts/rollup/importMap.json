{
  "BREAK": {
    "local": "BREAK",
    "from": "graphql/language/visitor"
  },
  "BreakingChangeType": {
    "local": "BreakingChangeType",
    "from": "graphql/utilities/findBreakingChanges"
  },
  "DEFAULT_DEPRECATION_REASON": {
    "local": "DEFAULT_DEPRECATION_REASON",
    "from": "graphql/type/directives"
  },
  "DangerousChangeType": {
    "local": "DangerousChangeType",
    "from": "graphql/utilities/findBreakingChanges"
  },
  "DirectiveLocation": {
    "local": "DirectiveLocation",
    "from": "graphql/language/directiveLocation"
  },
  "ExecutableDefinitionsRule": {
    "local": "ExecutableDefinitionsRule",
    "from": "graphql/validation/rules/ExecutableDefinitionsRule"
  },
  "FieldsOnCorrectTypeRule": {
    "local": "FieldsOnCorrectTypeRule",
    "from": "graphql/validation/rules/FieldsOnCorrectTypeRule"
  },
  "FragmentsOnCompositeTypesRule": {
    "local": "FragmentsOnCompositeTypesRule",
    "from": "graphql/validation/rules/FragmentsOnCompositeTypesRule"
  },
  "GRAPHQL_MAX_INT": {
    "local": "GRAPHQL_MAX_INT",
    "from": "graphql/type/scalars"
  },
  "GRAPHQL_MIN_INT": {
    "local": "GRAPHQL_MIN_INT",
    "from": "graphql/type/scalars"
  },
  "GraphQLBoolean": {
    "local": "GraphQLBoolean",
    "from": "graphql/type/scalars"
  },
  "GraphQLDeprecatedDirective": {
    "local": "GraphQLDeprecatedDirective",
    "from": "graphql/type/directives"
  },
  "GraphQLDirective": {
    "local": "GraphQLDirective",
    "from": "graphql/type/directives"
  },
  "GraphQLEnumType": {
    "local": "GraphQLEnumType",
    "from": "graphql/type/definition"
  },
  "GraphQLError": {
    "local": "GraphQLError",
    "from": "graphql/error/GraphQLError"
  },
  "GraphQLFloat": {
    "local": "GraphQLFloat",
    "from": "graphql/type/scalars"
  },
  "GraphQLID": {
    "local": "GraphQLID",
    "from": "graphql/type/scalars"
  },
  "GraphQLIncludeDirective": {
    "local": "GraphQLIncludeDirective",
    "from": "graphql/type/directives"
  },
  "GraphQLInt": {
    "local": "GraphQLInt",
    "from": "graphql/type/scalars"
  },
  "GraphQLList": {
    "local": "GraphQLList",
    "from": "graphql/type/definition"
  },
  "GraphQLNonNull": {
    "local": "GraphQLNonNull",
    "from": "graphql/type/definition"
  },
  "GraphQLObjectType": {
    "local": "GraphQLObjectType",
    "from": "graphql/type/definition"
  },
  "GraphQLScalarType": {
    "local": "GraphQLScalarType",
    "from": "graphql/type/definition"
  },
  "GraphQLSchema": {
    "local": "GraphQLSchema",
    "from": "graphql/type/schema"
  },
  "GraphQLSkipDirective": {
    "local": "GraphQLSkipDirective",
    "from": "graphql/type/directives"
  },
  "GraphQLSpecifiedByDirective": {
    "local": "GraphQLSpecifiedByDirective",
    "from": "graphql/type/directives"
  },
  "GraphQLString": {
    "local": "GraphQLString",
    "from": "graphql/type/scalars"
  },
  "Kind": {
    "local": "Kind",
    "from": "graphql/language/kinds"
  },
  "KnownArgumentNamesRule": {
    "local": "KnownArgumentNamesRule",
    "from": "graphql/validation/rules/KnownArgumentNamesRule"
  },
  "KnownDirectivesRule": {
    "local": "KnownDirectivesRule",
    "from": "graphql/validation/rules/KnownDirectivesRule"
  },
  "KnownFragmentNamesRule": {
    "local": "KnownFragmentNamesRule",
    "from": "graphql/validation/rules/KnownFragmentNamesRule"
  },
  "KnownTypeNamesRule": {
    "local": "KnownTypeNamesRule",
    "from": "graphql/validation/rules/KnownTypeNamesRule"
  },
  "Location": {
    "local": "Location",
    "from": "graphql/language/ast"
  },
  "LoneAnonymousOperationRule": {
    "local": "LoneAnonymousOperationRule",
    "from": "graphql/validation/rules/LoneAnonymousOperationRule"
  },
  "LoneSchemaDefinitionRule": {
    "local": "LoneSchemaDefinitionRule",
    "from": "graphql/validation/rules/LoneSchemaDefinitionRule"
  },
  "NoDeprecatedCustomRule": {
    "local": "NoDeprecatedCustomRule",
    "from": "graphql/validation/rules/custom/NoDeprecatedCustomRule"
  },
  "NoFragmentCyclesRule": {
    "local": "NoFragmentCyclesRule",
    "from": "graphql/validation/rules/NoFragmentCyclesRule"
  },
  "NoSchemaIntrospectionCustomRule": {
    "local": "NoSchemaIntrospectionCustomRule",
    "from": "graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule"
  },
  "NoUndefinedVariablesRule": {
    "local": "NoUndefinedVariablesRule",
    "from": "graphql/validation/rules/NoUndefinedVariablesRule"
  },
  "NoUnusedFragmentsRule": {
    "local": "NoUnusedFragmentsRule",
    "from": "graphql/validation/rules/NoUnusedFragmentsRule"
  },
  "NoUnusedVariablesRule": {
    "local": "NoUnusedVariablesRule",
    "from": "graphql/validation/rules/NoUnusedVariablesRule"
  },
  "OverlappingFieldsCanBeMergedRule": {
    "local": "OverlappingFieldsCanBeMergedRule",
    "from": "graphql/validation/rules/OverlappingFieldsCanBeMergedRule"
  },
  "PossibleFragmentSpreadsRule": {
    "local": "PossibleFragmentSpreadsRule",
    "from": "graphql/validation/rules/PossibleFragmentSpreadsRule"
  },
  "PossibleTypeExtensionsRule": {
    "local": "PossibleTypeExtensionsRule",
    "from": "graphql/validation/rules/PossibleTypeExtensionsRule"
  },
  "ProvidedRequiredArgumentsRule": {
    "local": "ProvidedRequiredArgumentsRule",
    "from": "graphql/validation/rules/ProvidedRequiredArgumentsRule"
  },
  "ScalarLeafsRule": {
    "local": "ScalarLeafsRule",
    "from": "graphql/validation/rules/ScalarLeafsRule"
  },
  "SchemaMetaFieldDef": {
    "local": "SchemaMetaFieldDef",
    "from": "graphql/type/introspection"
  },
  "SingleFieldSubscriptionsRule": {
    "local": "SingleFieldSubscriptionsRule",
    "from": "graphql/validation/rules/SingleFieldSubscriptionsRule"
  },
  "Source": {
    "local": "Source",
    "from": "graphql/language/source"
  },
  "TypeInfo": {
    "local": "TypeInfo",
    "from": "graphql/utilities/TypeInfo"
  },
  "TypeKind": {
    "local": "TypeKind",
    "from": "graphql/type/introspection"
  },
  "TypeMetaFieldDef": {
    "local": "TypeMetaFieldDef",
    "from": "graphql/type/introspection"
  },
  "TypeNameMetaFieldDef": {
    "local": "TypeNameMetaFieldDef",
    "from": "graphql/type/introspection"
  },
  "UniqueArgumentNamesRule": {
    "local": "UniqueArgumentNamesRule",
    "from": "graphql/validation/rules/UniqueArgumentNamesRule"
  },
  "UniqueDirectiveNamesRule": {
    "local": "UniqueDirectiveNamesRule",
    "from": "graphql/validation/rules/UniqueDirectiveNamesRule"
  },
  "UniqueDirectivesPerLocationRule": {
    "local": "UniqueDirectivesPerLocationRule",
    "from": "graphql/validation/rules/UniqueDirectivesPerLocationRule"
  },
  "UniqueEnumValueNamesRule": {
    "local": "UniqueEnumValueNamesRule",
    "from": "graphql/validation/rules/UniqueEnumValueNamesRule"
  },
  "UniqueFieldDefinitionNamesRule": {
    "local": "UniqueFieldDefinitionNamesRule",
    "from": "graphql/validation/rules/UniqueFieldDefinitionNamesRule"
  },
  "UniqueFragmentNamesRule": {
    "local": "UniqueFragmentNamesRule",
    "from": "graphql/validation/rules/UniqueFragmentNamesRule"
  },
  "UniqueInputFieldNamesRule": {
    "local": "UniqueInputFieldNamesRule",
    "from": "graphql/validation/rules/UniqueInputFieldNamesRule"
  },
  "UniqueOperationNamesRule": {
    "local": "UniqueOperationNamesRule",
    "from": "graphql/validation/rules/UniqueOperationNamesRule"
  },
  "UniqueOperationTypesRule": {
    "local": "UniqueOperationTypesRule",
    "from": "graphql/validation/rules/UniqueOperationTypesRule"
  },
  "UniqueTypeNamesRule": {
    "local": "UniqueTypeNamesRule",
    "from": "graphql/validation/rules/UniqueTypeNamesRule"
  },
  "UniqueVariableNamesRule": {
    "local": "UniqueVariableNamesRule",
    "from": "graphql/validation/rules/UniqueVariableNamesRule"
  },
  "ValidationContext": {
    "local": "ValidationContext",
    "from": "graphql/validation/ValidationContext"
  },
  "ValuesOfCorrectTypeRule": {
    "local": "ValuesOfCorrectTypeRule",
    "from": "graphql/validation/rules/ValuesOfCorrectTypeRule"
  },
  "VariablesAreInputTypesRule": {
    "local": "VariablesAreInputTypesRule",
    "from": "graphql/validation/rules/VariablesAreInputTypesRule"
  },
  "VariablesInAllowedPositionRule": {
    "local": "VariablesInAllowedPositionRule",
    "from": "graphql/validation/rules/VariablesInAllowedPositionRule"
  },
  "__Directive": {
    "local": "__Directive",
    "from": "graphql/type/introspection"
  },
  "__DirectiveLocation": {
    "local": "__DirectiveLocation",
    "from": "graphql/type/introspection"
  },
  "__EnumValue": {
    "local": "__EnumValue",
    "from": "graphql/type/introspection"
  },
  "__Field": {
    "local": "__Field",
    "from": "graphql/type/introspection"
  },
  "__InputValue": {
    "local": "__InputValue",
    "from": "graphql/type/introspection"
  },
  "__Schema": {
    "local": "__Schema",
    "from": "graphql/type/introspection"
  },
  "__Type": {
    "local": "__Type",
    "from": "graphql/type/introspection"
  },
  "__TypeKind": {
    "local": "__TypeKind",
    "from": "graphql/type/introspection"
  },
  "assertDirective": {
    "local": "assertDirective",
    "from": "graphql/type/directives"
  },
  "assertEnumType": {
    "local": "assertEnumType",
    "from": "graphql/type/definition"
  },
  "assertInputObjectType": {
    "local": "assertInputObjectType",
    "from": "graphql/type/definition"
  },
  "assertInputType": {
    "local": "assertInputType",
    "from": "graphql/type/definition"
  },
  "assertLeafType": {
    "local": "assertLeafType",
    "from": "graphql/type/definition"
  },
  "assertListType": {
    "local": "assertListType",
    "from": "graphql/type/definition"
  },
  "assertNamedType": {
    "local": "assertNamedType",
    "from": "graphql/type/definition"
  },
  "assertNonNullType": {
    "local": "assertNonNullType",
    "from": "graphql/type/definition"
  },
  "assertNullableType": {
    "local": "assertNullableType",
    "from": "graphql/type/definition"
  },
  "assertObjectType": {
    "local": "assertObjectType",
    "from": "graphql/type/definition"
  },
  "assertOutputType": {
    "local": "assertOutputType",
    "from": "graphql/type/definition"
  },
  "assertScalarType": {
    "local": "assertScalarType",
    "from": "graphql/type/definition"
  },
  "assertType": {
    "local": "assertType",
    "from": "graphql/type/definition"
  },
  "assertUnionType": {
    "local": "assertUnionType",
    "from": "graphql/type/definition"
  },
  "assertValidName": {
    "local": "assertValidName",
    "from": "graphql/utilities/assertValidName"
  },
  "assertValidSchema": {
    "local": "assertValidSchema",
    "from": "graphql/type/validate"
  },
  "assertWrappingType": {
    "local": "assertWrappingType",
    "from": "graphql/type/definition"
  },
  "astFromValue": {
    "local": "astFromValue",
    "from": "graphql/utilities/astFromValue"
  },
  "buildClientSchema": {
    "local": "buildClientSchema",
    "from": "graphql/utilities/buildClientSchema"
  },
  "coerceInputValue": {
    "local": "coerceInputValue",
    "from": "graphql/utilities/coerceInputValue"
  },
  "concatAST": {
    "local": "concatAST",
    "from": "graphql/utilities/concatAST"
  },
  "createSourceEventStream": {
    "local": "createSourceEventStream",
    "from": "graphql/execution/subscribe"
  },
  "defaultFieldResolver": {
    "local": "defaultFieldResolver",
    "from": "graphql/execution/execute"
  },
  "defaultTypeResolver": {
    "local": "defaultTypeResolver",
    "from": "graphql/execution/execute"
  },
  "doTypesOverlap": {
    "local": "doTypesOverlap",
    "from": "graphql/utilities/typeComparators"
  },
  "execute": {
    "local": "execute",
    "from": "graphql/execution/execute"
  },
  "executeSync": {
    "local": "executeSync",
    "from": "graphql/execution/execute"
  },
  "extendSchema": {
    "local": "extendSchema",
    "from": "graphql/utilities/extendSchema"
  },
  "findBreakingChanges": {
    "local": "findBreakingChanges",
    "from": "graphql/utilities/findBreakingChanges"
  },
  "findDangerousChanges": {
    "local": "findDangerousChanges",
    "from": "graphql/utilities/findBreakingChanges"
  },
  "formatError": {
    "local": "formatError",
    "from": "graphql/error/formatError"
  },
  "getDirectiveValues": {
    "local": "getDirectiveValues",
    "from": "graphql/execution/values"
  },
  "getArgumentValues": {
    "local": "getArgumentValues",
    "from": "graphql/execution/values"
  },
  "getVariableValues": {
    "local": "getVariableValues",
    "from": "graphql/execution/values"
  },
  "getIntrospectionQuery": {
    "local": "getIntrospectionQuery",
    "from": "graphql/utilities/getIntrospectionQuery"
  },
  "getLocation": {
    "local": "getLocation",
    "from": "graphql/language/location"
  },
  "getNamedType": {
    "local": "getNamedType",
    "from": "graphql/type/definition"
  },
  "getNullableType": {
    "local": "getNullableType",
    "from": "graphql/type/definition"
  },
  "resolveObjMapThunk": {
    "local": "resolveObjMapThunk",
    "from": "graphql/type/definition"
  },
  "resolveReadonlyArrayThunk": {
    "local": "resolveReadonlyArrayThunk",
    "from": "graphql/type/definition"
  },
  "getOperationAST": {
    "local": "getOperationAST",
    "from": "graphql/utilities/getOperationAST"
  },
  "getOperationRootType": {
    "local": "getOperationRootType",
    "from": "graphql/utilities/getOperationRootType"
  },
  "getVisitFn": {
    "local": "getVisitFn",
    "from": "graphql/language/visitor"
  },
  "graphql": {
    "local": "graphql",
    "from": "graphql/graphql"
  },
  "graphqlSync": {
    "local": "graphqlSync",
    "from": "graphql/graphql"
  },
  "introspectionFromSchema": {
    "local": "introspectionFromSchema",
    "from": "graphql/utilities/introspectionFromSchema"
  },
  "introspectionTypes": {
    "local": "introspectionTypes",
    "from": "graphql/type/introspection"
  },
  "isAbstractType": {
    "local": "isAbstractType",
    "from": "graphql/type/definition"
  },
  "isCompositeType": {
    "local": "isCompositeType",
    "from": "graphql/type/definition"
  },
  "isDefinitionNode": {
    "local": "isDefinitionNode",
    "from": "graphql/language/predicates"
  },
  "isDirective": {
    "local": "isDirective",
    "from": "graphql/type/directives"
  },
  "isEnumType": {
    "local": "isEnumType",
    "from": "graphql/type/definition"
  },
  "isEqualType": {
    "local": "isEqualType",
    "from": "graphql/utilities/typeComparators"
  },
  "isExecutableDefinitionNode": {
    "local": "isExecutableDefinitionNode",
    "from": "graphql/language/predicates"
  },
  "isInputObjectType": {
    "local": "isInputObjectType",
    "from": "graphql/type/definition"
  },
  "isInputType": {
    "local": "isInputType",
    "from": "graphql/type/definition"
  },
  "isIntrospectionType": {
    "local": "isIntrospectionType",
    "from": "graphql/type/introspection"
  },
  "isLeafType": {
    "local": "isLeafType",
    "from": "graphql/type/definition"
  },
  "isListType": {
    "local": "isListType",
    "from": "graphql/type/definition"
  },
  "isNamedType": {
    "local": "isNamedType",
    "from": "graphql/type/definition"
  },
  "isNonNullType": {
    "local": "isNonNullType",
    "from": "graphql/type/definition"
  },
  "isNullableType": {
    "local": "isNullableType",
    "from": "graphql/type/definition"
  },
  "isObjectType": {
    "local": "isObjectType",
    "from": "graphql/type/definition"
  },
  "isOutputType": {
    "local": "isOutputType",
    "from": "graphql/type/definition"
  },
  "isRequiredArgument": {
    "local": "isRequiredArgument",
    "from": "graphql/type/definition"
  },
  "isRequiredInputField": {
    "local": "isRequiredInputField",
    "from": "graphql/type/definition"
  },
  "isScalarType": {
    "local": "isScalarType",
    "from": "graphql/type/definition"
  },
  "isSelectionNode": {
    "local": "isSelectionNode",
    "from": "graphql/language/predicates"
  },
  "isSpecifiedDirective": {
    "local": "isSpecifiedDirective",
    "from": "graphql/type/directives"
  },
  "isSpecifiedScalarType": {
    "local": "isSpecifiedScalarType",
    "from": "graphql/type/scalars"
  },
  "isType": {
    "local": "isType",
    "from": "graphql/type/definition"
  },
  "isTypeDefinitionNode": {
    "local": "isTypeDefinitionNode",
    "from": "graphql/language/predicates"
  },
  "isTypeExtensionNode": {
    "local": "isTypeExtensionNode",
    "from": "graphql/language/predicates"
  },
  "isTypeNode": {
    "local": "isTypeNode",
    "from": "graphql/language/predicates"
  },
  "isTypeSubTypeOf": {
    "local": "isTypeSubTypeOf",
    "from": "graphql/utilities/typeComparators"
  },
  "isTypeSystemDefinitionNode": {
    "local": "isTypeSystemDefinitionNode",
    "from": "graphql/language/predicates"
  },
  "isTypeSystemExtensionNode": {
    "local": "isTypeSystemExtensionNode",
    "from": "graphql/language/predicates"
  },
  "isUnionType": {
    "local": "isUnionType",
    "from": "graphql/type/definition"
  },
  "isValidNameError": {
    "local": "isValidNameError",
    "from": "graphql/utilities/assertValidName"
  },
  "isValueNode": {
    "local": "isValueNode",
    "from": "graphql/language/predicates"
  },
  "isWrappingType": {
    "local": "isWrappingType",
    "from": "graphql/type/definition"
  },
  "locatedError": {
    "local": "locatedError",
    "from": "graphql/error/locatedError"
  },
  "parse": {
    "local": "parse",
    "from": "graphql/language/parser"
  },
  "parseType": {
    "local": "parseType",
    "from": "graphql/language/parser"
  },
  "parseValue": {
    "local": "parseValue",
    "from": "graphql/language/parser"
  },
  "print": {
    "local": "print",
    "from": "graphql/language/printer"
  },
  "printError": {
    "local": "printError",
    "from": "graphql/error/GraphQLError"
  },
  "printLocation": {
    "local": "printLocation",
    "from": "graphql/language/printLocation"
  },
  "printSourceLocation": {
    "local": "printSourceLocation",
    "from": "graphql/language/printLocation"
  },
  "responsePathAsArray": {
    "local": "pathToArray",
    "from": "graphql/jsutils/Path"
  },
  "separateOperations": {
    "local": "separateOperations",
    "from": "graphql/utilities/separateOperations"
  },
  "specifiedDirectives": {
    "local": "specifiedDirectives",
    "from": "graphql/type/directives"
  },
  "specifiedRules": {
    "local": "specifiedRules",
    "from": "graphql/validation/specifiedRules"
  },
  "specifiedScalarTypes": {
    "local": "specifiedScalarTypes",
    "from": "graphql/type/scalars"
  },
  "stripIgnoredCharacters": {
    "local": "stripIgnoredCharacters",
    "from": "graphql/utilities/stripIgnoredCharacters"
  },
  "subscribe": {
    "local": "subscribe",
    "from": "graphql/subscription/subscribe"
  },
  "typeFromAST": {
    "local": "typeFromAST",
    "from": "graphql/utilities/typeFromAST"
  },
  "validate": {
    "local": "validate",
    "from": "graphql/validation/validate"
  },
  "validateSchema": {
    "local": "validateSchema",
    "from": "graphql/type/validate"
  },
  "valueFromAST": {
    "local": "valueFromAST",
    "from": "graphql/utilities/valueFromAST"
  },
  "valueFromASTUntyped": {
    "local": "valueFromASTUntyped",
    "from": "graphql/utilities/valueFromASTUntyped"
  },
  "version": {
    "local": "version",
    "from": "graphql/version"
  },
  "versionInfo": {
    "local": "versionInfo",
    "from": "graphql/version"
  },
  "visit": {
    "local": "visit",
    "from": "graphql/language/visitor"
  },
  "visitInParallel": {
    "local": "visitInParallel",
    "from": "graphql/language/visitor"
  },
  "visitWithTypeInfo": {
    "local": "visitWithTypeInfo",
    "from": "graphql/utilities/TypeInfo"
  }
}
